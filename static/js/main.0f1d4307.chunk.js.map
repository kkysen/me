{"version":3,"sources":["ts/main/polyfill/Array.prototype.flatMap.ts","ts/main/polyfill/Object.fromEntries.ts","ts/main/app/me.ts","ts/main/app/Title.tsx","ts/util/variableNames.ts","ts/main/internship/SimpleInternship.tsx","ts/main/internship/DietrichLab.tsx","ts/main/internship/FruitFlyBrainObservatory.tsx","ts/main/project/Project.tsx","ts/main/project/CAstroParty.tsx","ts/main/project/MegaMashBros.tsx","ts/main/project/NQueens.tsx","ts/main/project/Polybius.tsx","ts/main/project/ProjectScheduleViewer.tsx","ts/main/project/QuickTrip.tsx","ts/main/project/r3d3.tsx","ts/main/project/Scramble.tsx","ts/main/project/ScratchWasmRenderer.tsx","ts/main/project/SmartNeuralFuzzer.tsx","ts/main/project/ThisWebsite.tsx","ts/main/project/UFOTracker.tsx","ts/main/project/Projects.tsx","ts/main/project/WeatherOrNot.tsx","ts/main/project/Welp.tsx","ts/main/page/Home.tsx","ts/main/internship/SmartNeuralFuzzer.tsx","ts/main/writing/writings.ts","ts/main/writing/WritingPaths.ts","ts/main/page/pages.tsx","ts/main/page/Internships.tsx","ts/main/page/Writings.tsx","ts/main/page/Baseball.tsx","ts/main/page/Resume.tsx","ts/main/app/Footer.tsx","ts/main/navbar/NavBar.tsx","ts/main/app/Header.tsx","ts/main/app/Routes.tsx","ts/util/serviceWorker.ts","index.tsx","ts/main/app/App.tsx","media/Bacillus subtilis.jpg","media/logo.svg","media/N Queens Animation.gif","media/N Queens Solved.png","media/Senior Portrait.jpg"],"names":["Array","prototype","flatMap","thisArg","_ref","bind","concat","apply","Object","toConsumableArray","this","map","fromEntries","entries","o","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_ref3","value","_ref2","slicedToArray","k","v","err","return","me","firstName","lastName","name","email","Title","title","children","trivialTitle","react","react_document_title_default","a","separateCamelCase","className","replace","trim","makeSimpleInternship","props","_props$prettyName","prettyName","time","url","img","AbstractAndRole","imgAlt","Main","react_default","createElement","Fragment","src","main","alt","Preview","path","thumb","react_router_dom","to","href","abstract","website","pages","defineProperty","Page","DietrichLab","bacillusSubtilis","FruitFlyBrainObservatory","makeProject","dataArgs","data","MainPage","args","gitHubUser","user","repoName","repo","brief","_args$camelCase","camelCase","file","uuid","s","convertData","Header","_Preview","CAstroParty","style","margin","MegaMashBros","NQueensImage","description","fullDescription","NQueens","videoTitle","NQueens_NQueensImage","solved","animation","width","height","allow","allowFullScreen","Polybius","ProjectScheduleViewer","QuickTrip","r3d3","Scramble","ScratchWasmRenderer","SmartNeuralFuzzer","ThisWebsite","UFOTracker","projects","Projects","pageTree","e","key","assign","Home","seniorPortrait","WritingImpl","docId","date","classCallCheck","make","root","parentDir","dir","metadata","html","public","dist","process","getWritingPaths","writings","writingsMetadata","_ref2$override","override","Date","pageIterator","names","_i","_Object$entries","_name","_pages","it","_args","arguments","regenerator_default","wrap","_context","prev","length","_Page","toString","Title_Title","push","t0","finish","pop","stop","_marked","getPages","testPageTreeChildren","test1","test2","test3","test4","home","internships","internship_SmartNeuralFuzzer_SmartNeuralFuzzer","objectSpread","writing","toLocaleDateString","baseball","resume","Footer","NormalDropDown","timeoutHandle","_useState","useState","_useState2","redirect","setRedirect","Items","addMainLink","level","isOpen","setIsOpen","id","show","drop","onToggle","react_router","onMouseEnter","window","clearTimeout","onMouseLeave","setTimeout","console","log","NavDropdown","DropDown","TopLevel","NavBar_NormalDropDown","TreeLeaf","_useState3","_useState4","hover","setHover","padding","whiteSpace","backgroundColor","fontSize","LinkContainer_default","NavItem","NavBarTree","_ref8","Tree","Map","_ref9","_ref4","NavBar_DropDown","_useState5","_useState6","openIndex","setOpenIndex","items","_ref5","i","_ref6","subPath","NavBar_TreeLeaf","_ref7","makeTree","_ref10","Navbar","bg","expand","NavbarBrand","NavbarToggle","aria-controls","NavbarCollapse","Nav","NavBar_NavBarTree","RouteTree","exact","component","location","serviceWorker","NODE_ENV","PUBLIC_URL","navigator","hostname","match","unRegister","_unRegister","_callee3","_registration2","_context3","ready","registration","sent","unregister","ReactDOM","Header_Header","Routes_RouteTree","Footer_Footer","document","getElementById","asyncToGenerator","mark","_callee","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0f1d4307.chunk.js","sourcesContent":["export function flatMap<T, U, This = undefined>(\n    this: T[],\n    flatMap: (this: This, value: T, index: number, array: T[]) => U | readonly U[],\n    thisArg?: This\n): U[] {\n    if (thisArg) {\n        flatMap = flatMap.bind(thisArg as ThisParameterType<typeof flatMap>);\n    }\n    // TODO speed up, remove unnecessary copies w/ manual for...of loop\n    return ([] as U[]).concat(...this.map(flatMap));\n}\n\nif (!Array.prototype.flatMap) {\n    Array.prototype.flatMap = flatMap;\n}\n","export function fromEntries<T = any>(entries: Iterable<readonly [PropertyKey, T]>): { [k in PropertyKey]: T } {\n    const o: { [k in PropertyKey]: T } = {};\n    for (const [k, v] of entries) {\n        // for some reason symbols aren't allowed as an indexable property\n        // even though they're part of PropertyKey\n        o[k as string | number] = v;\n    }\n    return o;\n}\n\nif (!Object.fromEntries) {\n    Object.fromEntries = fromEntries;\n}\n","const firstName = \"Khyber\";\nconst lastName = \"Sen\";\n\nexport const me = {\n    firstName,\n    lastName,\n    name: `${firstName} ${lastName}`,\n    email: \"kkysen@gmail.com\",\n} as const;\n","import * as React from \"react\";\nimport {FC} from \"react\";\nimport DocumentTitle from \"react-document-title\";\nimport {me} from \"./me\";\n\nexport const Title: FC<{title?: string}> = ({title, children}) => {\n    const trivialTitle = !title || title === me.name;\n    return <DocumentTitle title={!trivialTitle ? `${title} - ${me.name}` : me.name}>\n        <>\n            {children}\n        </>\n    </DocumentTitle>;\n};\n","export function separateCamelCase(className: string): string {\n    return className.replace(/([A-Z])/g, \" $1\").trim();\n}\n","import {default as React, FC} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {separateCamelCase} from \"../../util/variableNames\";\nimport {PageTreeChildren} from \"../page/pages\";\n\ninterface SimpleInternship {\n    readonly Preview: FC<{path: string}>;\n    readonly Main: FC;\n    readonly pages: PageTreeChildren;\n}\n\ninterface Props {\n    name: string;\n    prettyName?: string;\n    time: string;\n    url: {\n        abstract: string;\n        website: string;\n    };\n    img: {\n        thumb: string;\n        main: string;\n    }\n    AbstractAndRole: FC;\n}\n\nexport function makeSimpleInternship(props: Props): SimpleInternship {\n    const {\n        name,\n        prettyName = separateCamelCase(name),\n        time,\n        url,\n        img,\n        AbstractAndRole,\n    } = props;\n    \n    const imgAlt = `My ${prettyName} internship during ${time}`;\n    \n    const Preview: FC<{path: string}> = ({path}) => {\n        return <>\n            {prettyName} - {time}\n            <img src={img.thumb} alt={imgAlt}/>\n            <br/>\n            <Link to={`${path}/${name}`}>Click here for my abstract and role on the project.</Link>\n            <br/>\n            <a href={url.abstract}>Click here for project abstract.</a>\n            <br/>\n            <a href={url.website}>Click here for project website.</a>\n        </>;\n    };\n    \n    const Main: FC = () => {\n        return <>\n            <img src={img.main} alt={imgAlt}/>\n            Abstract and Role\n            <br/>\n            <p>\n                <AbstractAndRole/>\n            </p>\n        </>;\n    };\n    \n    return {\n        Preview,\n        Main,\n        pages: {\n            [name]: {\n                title: prettyName,\n                Page: Main,\n            },\n        },\n    };\n}\n","import * as React from \"react\";\nimport {makeSimpleInternship} from \"./SimpleInternship\";\nimport bacillusSubtilis from \"../../../media/Bacillus subtilis.jpg\"\n\nexport const DietrichLab = makeSimpleInternship({\n    name: \"DietrichLab\",\n    time: \"Summer 2015\",\n    url: {\n        abstract: \"http://www.dietrichlab.com/multicellularity.html\",\n        website: \"http://www.dietrichlab.com\",\n    },\n    img: {\n        thumb: bacillusSubtilis,\n        main: bacillusSubtilis,\n    },\n    AbstractAndRole: () => <>\n        As an intern at Professor Dietrich’s Columbia lab in 2015, I studied the response of biofilms,\n        multicellular colonies of bacteria, to oxygen deprivation.\n        Because biofilms are much harder to kill and occasionally antibiotic resistant,\n        Understanding their weaknesses is crucial to developing new antibacterial treatments.\n        Since some infectious bacteria wrinkle to increase their oxygen exposure,\n        I worked on developing the optimal substrate mix to grow robust, wrinkled colonies\n        and then analyzing their chemical composition to understand the wrinkling response.\n        I also ran many polymerase chain reactions to discover the metabolic\n        and genetic pathways leading to this wrinkling adaptation.\n    </>,\n});\n","import * as React from \"react\";\nimport {makeSimpleInternship} from \"./SimpleInternship\";\n\nexport const FruitFlyBrainObservatory = makeSimpleInternship({\n    name: \"FruitFlyBrainObservatory\",\n    prettyName: \"FFBO - Fruit Fly Brain Observatory\",\n    time: \"Summer 2017\",\n    url: {\n        abstract: \"https://federalreporter.nih.gov/Projects/Details/?projectId=801626\",\n        website: \"http://fruitflybrain.org\",\n    },\n    img: {\n        thumb: \"\", // TODO\n        main: \"\", // TODO\n    },\n    AbstractAndRole: () => <>\n        To create better artificial intelligence, the best resource we have is our own brain.\n        By understanding how our own brain functions and what makes it so intelligent,\n        we may be able to apply these techniques to the AIs we create.\n        However, the human brain is amazingly complex with over 100 billion neurons,\n        and currently, we understand very little of how it works.\n        Thus, it is extremely useful to begin by studying the fruit fly brain,\n        a much smaller, simpler brain of only 100,000 neurons\n        that is still capable of advanced cognition beyond what we currently understand.\n        In creating simulations of the fruit fly brain and its many neural circuits,\n        it is vitally important to run real-time simulations that capture real-world\n        and analyze it as a fly would.\n        This allows us to evaluate how our model performs in the same situation as a real fruit fly.\n        The perfect candidate for this is a fruit fly robot that can sense and behave like a real fruit fly.\n        While simulating the physical capabilities of the fruit fly is also important,\n        simulating the sensory input and behavior is paramount, and is focused on in this project.\n        <br/>\n        My role in this project was to implement the vision system of the fruit fly robot.\n        To do so, I had to simulate the grid-like, blurred vision of the fruit fly’s compound eyes,\n        which was accomplished by using a convolution of the image frame with a gaussian kernel,\n        in addition to simulating the same elementary motion detection algorithms\n        that have been recently discovered in the fruit fly brain.\n        The entire vision system was not implemented,\n        but since motion detection and the fly’s evasive response is\n        one of the fruit fly’s most used neural pathways, this was deemed sufficient for most purposes.\n        Both the convolution and motion detection algorithms are highly parallelizable,\n        as are the actual neural pathways in the brain,\n        so full advantage was taken of the massive parallel processing power of the GPU,\n        specifically the embeddable NVIDIA Jetson TX2.\n        A major challenge in this was the real-time demand,\n        since the camera ran at 60 frames per second (ideally, this would be set at 300 FPS,\n        because the fruit fly’s compound eye can see at a much higher rate,\n        but the camera used could not attain 300 FPS),\n        meaning all the image processing, convolution, and motion detection\n        had to be performed in 1/60th of a second.\n        Consequently, the program had to be heavily optimized for the GPU,\n        performing copy elision so that the raw image was sent directly to the GPU\n        and ensuring the parallel algorithms achieved maximum cache efficiency and shared memory use,\n        most loops were unrolled to reduce instruction overhead,\n        and striding all memory accesses to reduce shared memory bank conflicts.\n        <br/>\n        After 3 weeks of learning Cuda GPU programming using C, C++, and Python\n        and the neural “architecture” of the fruit fly brain,\n        and after 4 weeks working on this project, the vision system of the fruit fly robot was complete.\n        It is now able to process video at 60 frames per second and detect elementary motion\n        after going through the compound vision filter and then make the appropriate response.\n        It is able to track and follow a moving object,\n        as well as speed away when an object approaches too quickly,\n        and thus is able to mimic the behavior of the fruit fly.\n    </>,\n});\n","import * as React from \"react\";\nimport {FC} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {separateCamelCase} from \"../../util/variableNames\";\nimport {PageTreeChildren} from \"../page/pages\";\n\nexport interface Project {\n    readonly uuid: string;\n    readonly Preview: FC<{path: string}>;\n    readonly Main: FC;\n    readonly pages: PageTreeChildren;\n}\n\ninterface DataArgs {\n    readonly user: string; // GitHub username\n    readonly repo: string;\n    readonly brief: string;\n    readonly name?: string; // defaults to repo\n    readonly camelCase?: boolean; // split up camel case repo name\n    readonly file?: string;\n}\n\ninterface Data {\n    readonly uuid: string;\n    readonly name: string;\n    readonly gitHubUser: string;\n    readonly repoName: string;\n    readonly url: string;\n    readonly brief: string;\n}\n\nfunction convertData(args: DataArgs): Data {\n    const {user: gitHubUser, repo: repoName, brief, name, camelCase = true, file} = args;\n    const uuid = `${gitHubUser}/${repoName}${file || \"\"}`;\n    return {\n        uuid,\n        name: name || (camelCase ? separateCamelCase : (s: string) => s)(repoName),\n        gitHubUser,\n        repoName,\n        url: `https://github.com/${uuid}`,\n        brief,\n    };\n}\n\ninterface Props {\n    data: DataArgs;\n    MainPage: FC<{data: Data, Header: FC}>;\n}\n\nexport function makeProject(props: Props): Project {\n    const {data: dataArgs, MainPage} = props;\n    const data = convertData(dataArgs);\n    const {uuid} = data;\n    \n    const Preview: FC<{path?: string}> = ({path}) => {\n        const {name, brief, url} = data;\n        return <div>\n            Name: {name}\n            <br/>\n            {brief}\n            <br/>\n            {path && <Link to={`${path}/${uuid}`}>Read more</Link>}\n            <br/>\n            See source code: <a href={url}>{url}</a>\n            <br/>\n        </div>;\n    };\n    \n    const Main: FC = () => {\n        return <MainPage data={data} Header={() => <Preview/>}/>;\n    };\n    \n    return {\n        uuid,\n        Preview: ({path}) => <Preview path={path}/>,\n        Main,\n        pages: {\n            [uuid]: {\n                title: data.name,\n                Page: Main,\n            }\n        },\n    };\n}\n","import * as React from \"react\";\nimport {makeProject} from \"./Project\";\n\nexport const CAstroParty = makeProject({\n    data: {\n        user: \"kkysen\",\n        repo: \"CAstroParty\",\n        name: \"CAstro Party\",\n        brief: \"TODO\",\n    },\n    MainPage: ({Header}) => {\n        return <div style={{margin: \"10%\"}}>\n            <Header/>\n            TODO\n        </div>;\n    },\n});\n","import * as React from \"react\";\nimport {makeProject} from \"./Project\";\n\nexport const MegaMashBros = makeProject({\n    data: {\n        user: \"kkysen\",\n        repo: \"MegaMashBros\",\n        brief: \"A play on the classic game.\",\n    },\n    MainPage: ({Header}) => {\n        return <div style={{margin: \"10%\"}}>\n            <Header/>\n            <br/>\n            <br/>\n            Mega Mash Bros is a clone of Super Smash Bros,\n            developed using libGDX and Java 8 by Stanley Lin and I\n            for our AP Computer Science Spring Final Project in Spring, 2017.\n            <br/>\n            <br/>\n        </div>;\n    },\n});\n","import * as React from \"react\";\nimport {FC} from \"react\";\nimport animation from \"../../../media/N Queens Animation.gif\";\nimport solved from \"../../../media/N Queens Solved.png\";\nimport {makeProject} from \"./Project\";\n\nconst NQueensImage: FC<{description: string, src: string}> = ({description, src}) => {\n    const fullDescription = `N Queens ${description}`;\n    return <>\n        {fullDescription}: <img src={src} alt={fullDescription}/>\n    </>;\n};\n\nexport const NQueens = makeProject({\n    data: {\n        user: \"kkysen\",\n        repo: \"MKS22X\",\n        name: \"N Queens\",\n        file: \"/blob/master/02NQueens/NQueens.java\",\n        brief: \"A novel solution to a classic computer science problem.\",\n    },\n    MainPage: ({Header}) => {\n        const videoTitle = \"A bitwise solution to the N Queens problem written in Java.\";\n        return <div style={{margin: \"10%\"}}>\n            <Header/>\n            <br/>\n            <br/>\n            <NQueensImage description=\"solved for N = 8\" src={solved}/>\n            <br/>\n            <br/>\n            <NQueensImage description=\"animation for N = 8\" src={animation}/>\n            <br/>\n            <br/>\n            {videoTitle}\n            <iframe src=\"https://www.youtube.com/embed/b2ejXXoIQqI\"\n                    title={videoTitle}\n                    width=\"656\" height=\"362\"\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n            />\n            <br/>\n            <br/>\n            Description\n            <br/>\n            <br/>\n            Another one of my passions is re-examining the simple, classic problems of computer science to find\n            new, novel solutions, which can often teach us valuable lessons and techniques\n            that can potentially be applied elsewhere to outstanding effect.\n            This was the case for my innovative solution to the N Queens problem,\n            which is to count the number of N by N chess boards on which N queens can be placed\n            such that no two queens are threatening each other.\n            The straightforward way we learned to solve this in school was to create a 2D array as the board\n            and recurse through the rows, placing a queen in the next open spot,\n            and then filling in all the spots threatened by the new queen.\n            Since the number of solutions grows exponentially,\n            solving the N Queens problem for much higher N is currently impossible,\n            but nevertheless, the simple way we solved it was extremely inefficient, slow, and memory-intensive.\n            So I set about trying to find a more efficient way to approach the problem.\n            <br/>\n            The near-optimal solution I developed approached this problem in a fundamentally different way.\n            Instead of representing the board as a 2D array, I represented the entire board\n            and all the current threats in only three integers.\n            I used the individual bits of the integers to represent\n            the vertical, left diagonal, and right diagonal threats,\n            allowing me to flip a bit to place a new queen\n            and then bitshift the diagonals to create the next row.\n            By taking advantage of extremely fast bit operations instead of slower loops,\n            and by confining the memory to only three integers,\n            I was able to run the program entirely on the tiny memory of the CPU\n            instead of accessing comparatively slow RAM.\n            The result was that my program was thousands of times faster and used dramatically less memory.\n            Even when I searched online to see if there was a better solution,\n            my program was 20% faster than Jeff Somers’, which purports to be the world’s fastest.\n            <br/>\n            <br/>\n        </div>;\n    },\n});\n","import * as React from \"react\";\nimport {makeProject} from \"./Project\";\n\nexport const Polybius = makeProject({\n    data: {\n        user: \"kkysen\",\n        repo: \"Polybius\",\n        brief: \"TODO\",\n    },\n    MainPage: ({Header}) => {\n        return <div style={{margin: \"10%\"}}>\n            <Header/>\n            TODO\n        </div>;\n    },\n});\n","import * as React from \"react\";\nimport {makeProject} from \"./Project\";\n\nexport const ProjectScheduleViewer = makeProject({\n    data: {\n        user: \"kkysen\",\n        repo: \"ProjectScheduleViewer\",\n        brief: \"TODO\",\n    },\n    MainPage: ({Header}) => {\n        return <div style={{margin: \"10%\"}}>\n            <Header/>\n            TODO\n        </div>;\n    },\n});\n","import * as React from \"react\";\nimport {makeProject} from \"./Project\";\n\nexport const QuickTrip = makeProject({\n    data: {\n        user: \"kkysen\",\n        repo: \"QuickTrip\",\n        brief: \"How to get there fast and cheap.\",\n    },\n    MainPage: ({Header}) => {\n        return <div style={{margin: \"10%\"}}>\n            <Header/>\n            <br/>\n            <br/>\n            QuickTrip is the ultimate travel planner.\n            All you have to do is give it a list of destinations you want to visit\n            and how long and it will plan your entire trip for you.\n            It will decide the best order of destinations to go to,\n            as well as find the cheapest, highest-rated flights and hotels for you to stay in,\n            and even driving directions between everything.\n            <br/>\n            <br/>\n            QuickTrip was developed by Stanley Lin and I for\n            our AP Computer Science Fall Final Project in Fall, 2016.\n            <br/>\n            <br/>\n            QuickTrip is written in Java 8 using JavaFX\n            and uses many APIs to fetch flight, hotel, and geocoding data,\n            including Google Maps API, Google Maps Directions API, Google Geocoding API,\n            Google QPX Express API, and hotels.com.\n            It utilizes a caching mechanism for all API requests\n            to avoid going over API rate limits for duplicated requests,\n            the DBSCAN clustering algorithm to find the optimal, clustered destination order,\n            and simulated annealing to find the highest-rated but still cheapest hotels and flights.\n            <br/>\n            <br/>\n        </div>;\n    },\n});\n","import * as React from \"react\";\nimport {makeProject} from \"./Project\";\n\nexport const r3d3 = makeProject({\n    data: {\n        user: \"kkysen\",\n        repo: \"r3d3\",\n        brief: \"TODO\",\n    },\n    MainPage: ({Header}) => {\n        return <div style={{margin: \"10%\"}}>\n            <Header/>\n            TODO\n        </div>;\n    },\n});\n","import * as React from \"react\";\nimport {makeProject} from \"./Project\";\n\nexport const Scramble = makeProject({\n    data: {\n        user: \"kkysen\",\n        repo: \"Scramble\",\n        brief: \"A challenging word game for your spare time.\",\n    },\n    MainPage: ({Header}) => {\n        return <div style={{margin: \"10%\"}}>\n            <Header/>\n            <br/>\n            <br/>\n            My dad has always loved word puzzles, so I created one for him for his birthday: Scramble.\n            In Scramble, there is a pyramid of letters shown,\n            and the goal is to rearrange all the letters (by clicking on two)\n            such that each row of the pyramid makes its own word.\n            You can play from size 1 to 20, because at 20 there are very few 20-letter words left.\n            <br/>\n            <br/>\n            Scramble is written using libGDX in Java 8,\n            and although it is only currently setup to run on Java SE,\n            it can be recompiled for deployment on the web, Android, and iOS.\n            <br/>\n            <br/>\n            To play, click here and download Scramble.jar to your local drive.\n            Once done, double-click to play.\n            <br/>\n            <br/>\n        </div>;\n    },\n});\n","import * as React from \"react\";\nimport {makeProject} from \"./Project\";\n\nexport const ScratchWasmRenderer = makeProject({\n    data: {\n        user: \"kkysen\",\n        repo: \"ScratchWasmRenderer\",\n        brief: \"TODO\",\n    },\n    MainPage: ({Header}) => {\n        return <div style={{margin: \"10%\"}}>\n            <Header/>\n            TODO\n        </div>;\n    },\n});\n","import * as React from \"react\";\nimport {makeProject} from \"./Project\";\n\nexport const SmartNeuralFuzzer = makeProject({\n    data: {\n        user: \"kkysen\",\n        repo: \"SmartNeuralFuzzer\",\n        brief: \"TODO\",\n    },\n    MainPage: ({Header}) => {\n        return <div style={{margin: \"10%\"}}>\n            <Header/>\n            TODO\n        </div>;\n    },\n});\n","import * as React from \"react\";\nimport {makeProject} from \"./Project\";\n\nexport const ThisWebsite = makeProject({\n    data: {\n        user: \"kkysen\",\n        repo: \"me\",\n        name: \"This Website\",\n        brief: \"This website.\",\n    },\n    MainPage: ({Header}) => {\n        return <div style={{margin: \"10%\"}}>\n            <Header/>\n            TODO\n        </div>;\n    },\n});\n","import * as React from \"react\";\nimport {makeProject} from \"./Project\";\n\nexport const UFOTracker = makeProject({\n    data: {\n        user: \"luojeff\",\n        repo: \"aliens-revised\",\n        name: \"UFO Tracker\",\n        brief: \"Let's look for a UFO together.\",\n    },\n    MainPage: ({Header}) => {\n        return <div style={{margin: \"10%\"}}>\n            <Header/>\n            <br/>\n            <br/>\n            UFO Tracker is a data analysis project that analyzes UFO reports collected over the past since WWII.\n            My team, Jeffrey Luo, Max Zlotskiy, Jason Kao, and I,\n            tested if the number of UFO sightings was correlated with the number of nearby flights\n            and even the number of flights flying directly overhead\n            within a few miles of the sighting at the same time.\n            Surprisingly, we found no correlation between UFO sightings and air traffic.\n            <br/>\n            <br/>\n            UFO Tracker was the winner of the final project competition in\n            Two Sigma's Data Science Workshop in Fall, 2017.\n            Using Python in a Jupyter Notebook and making heavy use of pandas,\n            we used the UFO reports compiled by the National UFO Reporting Center and available on Kaggle,\n            in addition to flight data, including US aircraft carrier flights,\n            from the Bureau of Transportation Statistics geocoded using the Google Geocoding API.\n            <br/>\n            <br/>\n        </div>;\n    },\n});\n","import * as React from \"react\";\nimport {PageTree} from \"../page/pages\";\nimport {CAstroParty} from \"./CAstroParty\";\nimport {MegaMashBros} from \"./MegaMashBros\";\nimport {NQueens} from \"./NQueens\";\nimport {Polybius} from \"./Polybius\";\nimport {Project} from \"./Project\";\nimport {ProjectScheduleViewer} from \"./ProjectScheduleViewer\";\nimport {QuickTrip} from \"./QuickTrip\";\nimport {r3d3} from \"./r3d3\";\nimport {Scramble} from \"./Scramble\";\nimport {ScratchWasmRenderer} from \"./ScratchWasmRenderer\";\nimport {SmartNeuralFuzzer} from \"./SmartNeuralFuzzer\";\nimport {ThisWebsite} from \"./ThisWebsite\";\nimport {UFOTracker} from \"./UFOTracker\";\nimport {WeatherOrNot} from \"./WeatherOrNot\";\nimport {Welp} from \"./Welp\";\n\ninterface Projects {\n    readonly pageTree: PageTree;\n}\n\nconst projects: readonly Project[] = [\n    ThisWebsite,\n    SmartNeuralFuzzer,\n    ScratchWasmRenderer,\n    NQueens,\n    ProjectScheduleViewer,\n    r3d3,\n    Scramble,\n    WeatherOrNot,\n    UFOTracker,\n    Polybius,\n    CAstroParty,\n    MegaMashBros,\n    Welp,\n    QuickTrip,\n];\n\nexport const Projects: Projects = {\n    pageTree: {\n        title: \"Projects\",\n        Page: ({path}) => {\n            return <div>\n                {projects.map(e => <e.Preview path={path} key={e.uuid}/>)}\n            </div>;\n        },\n        children: Object.assign({}, ...projects.map(e => e.pages)),\n    },\n};\n","import * as React from \"react\";\nimport {makeProject} from \"./Project\";\n\nexport const WeatherOrNot = makeProject({\n    data: {\n        user: \"wertylop5\",\n        repo: \"WeatherOrNot\",\n        name: \"Weather or Not\",\n        brief: \"Traffic and weather - to plan your trip better.\",\n    },\n    MainPage: ({Header}) => {\n        return <div style={{margin: \"10%\"}}>\n            <Header/>\n            <br/>\n            <br/>\n            Have you ever been looking for driving directions on Google Maps\n            but then realized you didn't want to drive through the pouring rain?\n            If you have, then Weather Or Not is perfect for you.\n            It overlays real-time weather maps (and other types of maps) onto a traffic map\n            so that you can have the best of both worlds.\n            And it even supports adding comments on current conditions\n            to improve the weather and traffic conditions just like Waze.\n            <br/>\n            <br/>\n            Weather Or Not was created during the StuyHacks hackathon in May, 2017\n            over the course of 24 hours, developed by me, Stanley Lin, Brian Yang, and Aaron Gee.\n            <br/>\n            <br/>\n            Weather Or Not is a pure web app, using HTML, CSS, and plain JS\n            along with APIs like OpenWeatherMap and Firebase for a serverless database.\n            Currently, it only runs on localhost,\n            but since it's serverless, it can easily be deployed on any domain.\n            <br/>\n            <br/>\n        </div>;\n    },\n});\n","import * as React from \"react\";\nimport {makeProject} from \"./Project\";\n\nexport const Welp = makeProject({\n    data: {\n        user: \"tmoi29\",\n        repo: \"tenaciousTurtles\",\n        name: \"Welp\",\n        brief: \"TODO\",\n    },\n    MainPage: ({Header}) => {\n        return <div style={{margin: \"10%\"}}>\n            <Header/>\n            TODO\n        </div>;\n    },\n});\n","import * as React from \"react\";\nimport {FC} from \"react\";\nimport seniorPortrait from \"../../../media/Senior Portrait.jpg\"\nimport {me} from \"../app/me\";\n\nexport const Home: FC = () => {\n    return <>\n        Home\n        <br/>\n        <img src={seniorPortrait} alt={`${me.name}`} width=\"25%\" height=\"25%\"/>\n    </>;\n};\n","import * as React from \"react\";\nimport {FC} from \"react\";\n\nexport const SmartNeuralFuzzer: FC = () => {\n    return <>\n        Smart Neural Fuzzer\n    </>;\n};\n","import writingsMetadata from \"../../../data/writings/metadata.json\";\nimport {JsonWritingMetadata, JsonWritingMetadataOverride, WritingData, WritingMetadata} from \"./WritingData\";\nimport {getWritingPaths} from \"./WritingPaths\";\n\nclass WritingImpl implements WritingData {\n    \n    readonly docId: string;\n    readonly title: string;\n    readonly date: Date;\n    \n    constructor({docId, title, date}: WritingMetadata) {\n        this.docId = docId;\n        this.title = title;\n        this.date = date;\n    }\n    \n    get url() {\n        return getWritingPaths(this.docId).dist.html;\n    }\n    \n}\n\ninterface OverrideableJsonWritingMetadata extends JsonWritingMetadata {\n    override?: JsonWritingMetadataOverride;\n}\n\nexport function writingFromJson({docId, title, date, override = {}}: OverrideableJsonWritingMetadata): WritingData {\n    return new WritingImpl({\n        docId,\n        title: override.title || title,\n        date: new Date(override.date || date),\n    });\n}\n\nexport const writings: readonly WritingData[] = writingsMetadata.map(writingFromJson);\n","interface WritingPaths {\n    readonly parentDir: string;\n    readonly dir: string;\n    readonly metadata: string;\n    readonly html: string;\n}\n\ninterface AllWritingPaths {\n    readonly src: WritingPaths;\n    readonly public: WritingPaths;\n    readonly dist: WritingPaths;\n}\n\nexport function getWritingPaths(docId: string): AllWritingPaths {\n    const make = (root: string): WritingPaths => {\n        const parentDir = `${root}/data/writings`;\n        const dir = `${parentDir}/${docId}`;\n        return {\n            parentDir,\n            dir,\n            metadata: `${dir}/metadata.json`,\n            html: `${dir}/index.html`,\n        };\n    };\n    return {\n        get src() {\n            return make(\"src\");\n        },\n        get public() {\n            return make(\"public\");\n        },\n        get dist() {\n            return make(process.env.PUBLIC_URL!!);\n        },\n    };\n}\n","import * as React from \"react\";\nimport {FC} from \"react\";\nimport {me} from \"../app/me\";\nimport {Title} from \"../app/Title\";\nimport {DietrichLab} from \"../internship/DietrichLab\";\nimport {FruitFlyBrainObservatory} from \"../internship/FruitFlyBrainObservatory\";\nimport {Projects} from \"../project/Projects\";\nimport {Baseball} from \"./Baseball\";\nimport {Home} from \"./Home\";\nimport {Internships} from \"./Internships\";\nimport {Resume} from \"./Resume\";\nimport {Writings} from \"./Writings\";\n\nexport interface PageTreeChildren {\n    readonly [name: string]: PageTree;\n}\n\nexport interface PageTree {\n    readonly title: string;\n    readonly Page?: FC<{path: string}>;\n    readonly children?: PageTreeChildren;\n}\n\nexport interface Page {\n    Page: FC,\n    path: string;\n    names: readonly string[];\n    title: string;\n}\n\nfunction* pageIterator(pages: PageTree, path: string = \"\", names: string[] = []): Iterable<Page> {\n    const {title, Page, children} = pages;\n    if (Page) {\n        yield {\n            Page: () => {\n                return <Title title={title}><Page path={path}/></Title>;\n            },\n            path: path || \"/\",\n            names,\n            title,\n        };\n    }\n    if (children) {\n        for (const [name, pages] of Object.entries(children)) {\n            names.push(name);\n            for (const it of pageIterator(pages, `${path}/${name}`, names)) {\n                yield it;\n            }\n            names.pop();\n        }\n    }\n}\n\nexport function getPages(pages: PageTree): Iterable<Page> {\n    return pageIterator(pages);\n}\n\nconst testPageTreeChildren: PageTreeChildren = {\n    test1: {\n        title: \"Test 1\",\n        children: {\n            test2: {\n                title: \"Test 2\",\n                Page: () => <p>Hello, World</p>,\n                children: {\n                    test3: {\n                        title: \"Test 3\",\n                        children: {\n                            test4: {\n                                title: \"Test 4\",\n                                Page: () => <p>Hello, World again</p>\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\n\nexport const pageTree: PageTree = {\n    title: me.name,\n    Page: Home,\n    children: {\n        home: {\n            title: \"Home\",\n            Page: Home,\n        },\n        internships: {\n            title: \"Internships\",\n            Page: Internships,\n            children: {\n                ...FruitFlyBrainObservatory.pages,\n                ...DietrichLab.pages,\n                ...testPageTreeChildren,\n            },\n        },\n        projects: Projects.pageTree,\n        writing: {\n            title: \"Writing\",\n            Page: Writings,\n            children: {\n                // TODO\n            },\n        },\n        baseball: {\n            title: \"Baseball\",\n            Page: Baseball,\n        },\n        resume: {\n            title: \"Resume\",\n            Page: Resume,\n        },\n    },\n};\n","import * as React from \"react\";\nimport {FC} from \"react\";\nimport {DietrichLab} from \"../internship/DietrichLab\";\nimport {FruitFlyBrainObservatory} from \"../internship/FruitFlyBrainObservatory\";\nimport {SmartNeuralFuzzer} from \"../internship/SmartNeuralFuzzer\";\n\nexport const Internships: FC<{path: string}> = ({path}) => {\n    return <>\n        Internships\n        <br/>\n        <SmartNeuralFuzzer/>\n        <br/>\n        <FruitFlyBrainObservatory.Preview path={path}/>\n        <br/>\n        <DietrichLab.Preview path={path}/>\n    </>;\n};\n","import * as React from \"react\";\nimport {FC} from \"react\";\nimport {writings} from \"../writing/writings\";\n\nexport const Writings: FC = () => {\n    return <div>\n        {writings.map(({docId, title, date, url}) => <div key={docId}>\n            {title}\n            <br/>\n            {date.toLocaleDateString()}\n            <br/>\n            <a href={url}>Read it</a>\n            <br/>\n        </div>)}\n    </div>;\n};\n","import * as React from \"react\";\nimport {FC} from \"react\";\n\nexport const Baseball: FC = () => {\n    return <>\n        Pegleg Baseball at Stuyvesant High School\n        <br/>\n        <br/>\n        Varsity Pitcher and Right Fielder all four years of High School.\n        <br/>\n        Only player on team as a Freshman.\n        <br/>\n        Finished top 10 in PSAL in 2017.\n        <br/>\n        Team Captain Senior Year.\n    </>;\n};\n","import * as React from \"react\";\nimport {FC} from \"react\";\n\nexport const Resume: FC = () => {\n    return <>\n        Resume\n    </>;\n};\n","import React, {FC} from \"react\";\nimport {me} from \"./me\";\n\nexport const Footer: FC = () => {\n    return <footer>\n        Email: {me.email}\n    </footer>;\n};\n","import React, {FC, useState} from \"react\";\nimport Nav from \"react-bootstrap/es/Nav\";\nimport Navbar from \"react-bootstrap/es/Navbar\";\nimport NavbarBrand from \"react-bootstrap/es/NavbarBrand\";\nimport NavbarCollapse from \"react-bootstrap/es/NavbarCollapse\";\nimport NavbarToggle from \"react-bootstrap/es/NavbarToggle\";\nimport NavDropdown, {NavDropdownProps} from \"react-bootstrap/es/NavDropdown\";\nimport NavItem from \"react-bootstrap/es/NavItem\";\nimport {Redirect} from \"react-router\";\nimport LinkContainer from \"react-router-bootstrap/lib/LinkContainer\";\nimport {getPages, PageTree} from \"../page/pages\";\n\ntype TopLevelProps = {Items: FC, title: string};\n\ntype DropDownProps = TopLevelProps & {\n    path: string;\n    level: number;\n    addMainLink: boolean;\n    isOpen: boolean;\n    setIsOpen: (isOpen: boolean) => void;\n};\n\ntype RealNavDropdownProps = NavDropdownProps & {\n    show?: boolean;\n    drop?: \"down\" | \"up\" | \"right\" | \"left\";\n    alignRight?: boolean;\n    onSelect?: () => void;\n    onToggle?: () => void;\n    focusFirstItemOnShow?: boolean;\n}\n\nconst NormalDropDown: FC<{args: DropDownProps}> = ({args}) => {\n    const [redirect, setRedirect] = useState(false);\n    \n    const {Items, title, path, addMainLink, level, isOpen, setIsOpen} = args;\n    \n    const props: RealNavDropdownProps = {\n        title,\n        id: `nav-dropdown-${path}`,\n        show: isOpen,\n        drop: level < 2 ? \"down\" : \"right\",\n        onToggle: () => {\n            if (addMainLink) {\n                setRedirect(true);\n            }\n        },\n    };\n    \n    let timeoutHandle: number | undefined;\n    \n    return <>\n        {redirect && <Redirect to={path}/>}\n        <div\n            onMouseEnter={() => {\n                window.clearTimeout(timeoutHandle);\n                setIsOpen(true);\n            }}\n            onMouseLeave={() => {\n                // sometimes there are gaps between the dropdown\n                const timeout = 100;\n                timeoutHandle = window.setTimeout(() => {\n                    console.log(\"closing\");\n                    setIsOpen(false);\n                }, timeout);\n            }}\n        >\n            <NavDropdown {...props}>\n                <Items/>\n            </NavDropdown>\n        </div>\n    </>;\n};\n\nconst DropDown: FC<{args: DropDownProps & {TopLevel: FC<{args: TopLevelProps}>}}>\n    = ({args}) => {\n    const {level, TopLevel} = args;\n    if (level === 0) {\n        return <TopLevel args={args}/>;\n    } else {\n        return <NormalDropDown args={args}/>;\n    }\n};\n\nconst TreeLeaf: FC<{path: string, title: string}> = ({path, title}) => {\n    const [hover, setHover] = useState(false);\n    return <div\n        style={{\n            // lineHeight: \"40px\",\n            padding: \"10px 10px 5px 5px\",\n            whiteSpace: \"nowrap\",\n            backgroundColor: hover ? \"#f5f5f5\" : \"white\",\n            fontSize: 14,\n        }}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n    >\n        <LinkContainer to={path || \"/\"} key={path}>\n            <NavItem>\n                {title}\n            </NavItem>\n        </LinkContainer>\n    </div>;\n};\n\nfunction makeTree(TopLevel: FC<{args: TopLevelProps}>): FC<{pages: PageTree}> {\n    type Args = {\n        pages: PageTree;\n        path: string;\n        level: number;\n        isOpen: boolean;\n        setIsOpen: (isOpen: boolean) => void;\n    };\n    const Tree: FC<{args: Args}> = ({args}) => {\n        const {pages, path, level, isOpen, setIsOpen} = args;\n        const {title, Page, children} = pages;\n        if (!children) {\n            return <TreeLeaf path={path} title={title}/>;\n        } else {\n            const Items: FC = () => {\n                const [openIndex, setOpenIndex] = useState(-2);\n                console.log({openIndex, path});\n                const items = Object.entries(children)\n                    .map(([name, pages], i) => {\n                        const subPath = `${path}/${name}`;\n                        return <Tree args={{\n                            pages,\n                            path: subPath,\n                            level: level + 1,\n                            isOpen: openIndex === i,\n                            setIsOpen: isOpen => setOpenIndex(isOpen ? i : -1),\n                        }} key={subPath}/>;\n                    });\n                return <>{items}</>;\n            };\n            return <DropDown args={\n                {Items, title, addMainLink: !!Page, path, level, TopLevel, isOpen, setIsOpen}\n            }/>;\n        }\n    };\n    \n    return ({pages}) => <Tree args={{\n        pages,\n        path: \"\",\n        level: 0,\n        isOpen: true,\n        setIsOpen: () => {}\n    }}/>;\n}\n\nexport const NavBarTree: FC<{pages: PageTree}> = ({pages}) => {\n    \n    const searchMap = new Map([...getPages(pages)].map(({path, title}) => [title, path]));\n    \n    // TODO add search bar to TopLevel using searchMap\n    \n    const TopLevel: FC<{args: TopLevelProps}> = ({args}) => {\n        const {Items, title} = args;\n        return <Navbar bg=\"light\" expand=\"lg\">\n            <NavbarBrand>\n                {title}\n            </NavbarBrand>\n            <NavbarToggle aria-controls=\"basic-navbar-nav\"/>\n            <NavbarCollapse>\n                <Nav className=\"mr-auto\">\n                    <Items/>\n                </Nav>\n            </NavbarCollapse>\n        </Navbar>;\n    };\n    \n    const Tree = makeTree(TopLevel);\n    \n    return <Tree pages={pages}/>;\n};\n\nexport const NavBarTree2: FC = () => {\n    return <div>\n        {/*<div className=\"navbar navbar-default navbar-fixed-top\" role=\"navigation\">*/}\n        {/*    <div className=\"container\">*/}\n        {/*        <div className=\"navbar-header\">*/}\n        {/*            <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\"*/}\n        {/*                    data-target=\".navbar-collapse\">*/}\n        {/*                <span className=\"sr-only\">Toggle navigation</span>*/}\n        {/*                <span className=\"icon-bar\">Hello</span>*/}\n        {/*                <span className=\"icon-bar\"/>*/}\n        {/*                <span className=\"icon-bar\"/>*/}\n        {/*            </button>*/}\n        {/*            <a className=\"navbar-brand\" href=\"#\">NavBar</a>*/}\n        {/*        </div>*/}\n        {/*        <div className=\"collapse navbar-collapse\">*/}\n        {/*            <ul className=\"nav navbar-nav navbar-right\">*/}\n        {/*                <li>*/}\n        {/*                    <a href=\"https://github.com/fontenele/bootstrap-navbar-dropdowns\" target=\"_blank\">*/}\n        {/*                        GitHub Project*/}\n        {/*                    </a>*/}\n        {/*                </li>*/}\n        {/*            </ul>*/}\n        {/*            <ul className=\"nav navbar-nav\">*/}\n        {/*                <li className=\"active\"><a href=\"#\">Home</a></li>*/}\n        {/*                <li>*/}\n        {/*                    <a href=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\">*/}\n        {/*                        Menu 1 <b className=\"caret\"/>*/}\n        {/*                    </a>*/}\n        {/*                    <ul className=\"dropdown-menu multi-level\">*/}\n        {/*                        <li><a href=\"#\">Action</a></li>*/}\n        {/*                        <li><a href=\"#\">Another action</a></li>*/}\n        {/*                        <li><a href=\"#\">Something else here</a></li>*/}\n        {/*                        <li className=\"divider\"/>*/}\n        {/*                        <li><a href=\"#\">Separated link</a></li>*/}\n        {/*                        <li className=\"divider\"/>*/}\n        {/*                        <li><a href=\"#\">One more separated link</a></li>*/}\n        {/*                        <li className=\"dropdown-submenu\">*/}\n        {/*                            <a href=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\">Dropdown</a>*/}\n        {/*                            <ul className=\"dropdown-menu\">*/}\n        {/*                                <li><a href=\"#\">Action</a></li>*/}\n        {/*                                <li className=\"dropdown-submenu\">*/}\n        {/*                                    <a href=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\">Dropdown</a>*/}\n        {/*                                    <ul className=\"dropdown-menu\">*/}\n        {/*                                        <li className=\"dropdown-submenu\">*/}\n        {/*                                            <a href=\"#\" className=\"dropdown-toggle\"*/}\n        {/*                                               data-toggle=\"dropdown\">Dropdown</a>*/}\n        {/*                                            <ul className=\"dropdown-menu\">*/}\n        {/*                                                <li><a href=\"#\">Action</a></li>*/}\n        {/*                                                <li><a href=\"#\">Another action</a></li>*/}\n        {/*                                                <li><a href=\"#\">Something else here</a></li>*/}\n        {/*                                                <li className=\"divider\"/>*/}\n        {/*                                                <li><a href=\"#\">Separated link</a></li>*/}\n        {/*                                                <li className=\"divider\"/>*/}\n        {/*                                                <li><a href=\"#\">One more separated link</a></li>*/}\n        {/*                                            </ul>*/}\n        {/*                                        </li>*/}\n        {/*                                    </ul>*/}\n        {/*                                </li>*/}\n        {/*                            </ul>*/}\n        {/*                        </li>*/}\n        {/*                    </ul>*/}\n        {/*                </li>*/}\n        {/*                <li>*/}\n        {/*                    <a href=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\">*/}\n        {/*                        Menu 2 <b className=\"caret\"/>*/}\n        {/*                    </a>*/}\n        {/*                    <ul className=\"dropdown-menu\">*/}\n        {/*                        <li><a href=\"#\">Action</a></li>*/}\n        {/*                        <li><a href=\"#\">Another action</a></li>*/}\n        {/*                        <li><a href=\"#\">Something else here</a></li>*/}\n        {/*                        <li className=\"divider\"/>*/}\n        {/*                        <li><a href=\"#\">Separated link</a></li>*/}\n        {/*                        <li className=\"divider\"/>*/}\n        {/*                        <li><a href=\"#\">One more separated link</a></li>*/}\n        {/*                        <li className=\"dropdown-submenu\">*/}\n        {/*                            <a href=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\">Dropdown</a>*/}\n        {/*                            <ul className=\"dropdown-menu\">*/}\n        {/*                                <li><a href=\"#\">Action</a></li>*/}\n        {/*                                <li><a href=\"#\">Another action</a></li>*/}\n        {/*                                <li><a href=\"#\">Something else here</a></li>*/}\n        {/*                                <li className=\"divider\"/>*/}\n        {/*                                <li><a href=\"#\">Separated link</a></li>*/}\n        {/*                                <li className=\"divider\"/>*/}\n        {/*                                <li className=\"dropdown-submenu\">*/}\n        {/*                                    <a href=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\">Dropdown</a>*/}\n        {/*                                    <ul className=\"dropdown-menu\">*/}\n        {/*                                        <li className=\"dropdown-submenu\">*/}\n        {/*                                            <a href=\"#\" className=\"dropdown-toggle\"*/}\n        {/*                                               data-toggle=\"dropdown\">Dropdown</a>*/}\n        {/*                                            <ul className=\"dropdown-menu\">*/}\n        {/*                                                <li><a href=\"#\">Action</a></li>*/}\n        {/*                                                <li><a href=\"#\">Another action</a></li>*/}\n        {/*                                                <li><a href=\"#\">Something else here</a></li>*/}\n        {/*                                                <li className=\"divider\"/>*/}\n        {/*                                                <li><a href=\"#\">Separated link</a></li>*/}\n        {/*                                                <li className=\"divider\"/>*/}\n        {/*                                                <li><a href=\"#\">One more separated link</a></li>*/}\n        {/*                                            </ul>*/}\n        {/*                                        </li>*/}\n        {/*                                    </ul>*/}\n        {/*                                </li>*/}\n        {/*                            </ul>*/}\n        {/*                        </li>*/}\n        {/*                    </ul>*/}\n        {/*                </li>*/}\n        {/*            </ul>*/}\n        {/*        </div>*/}\n        {/*/.nav-collapse*/}\n        {/*    </div>*/}\n        {/*</div>*/}\n        {/*<div className=\"container\">*/}\n        {/*    <div className=\"navbar-template text-center\">*/}\n        {/*        <h1>Bootstrap NavBar</h1>*/}\n        {/*        <p className=\"lead text-info\">NavBar with too many childs.</p>*/}\n        {/*        <a target=\"_blank\" href=\"https://bootsnipp.com/snippets/featured/multi-level-dropdown-menu-bs3\">*/}\n        {/*            Thanks to msurguy (Multi level dropdown menu BS3)</a>*/}\n        {/*    </div>*/}\n        {/*</div>*/}\n    </div>;\n};\n","import React, {FC} from \"react\";\nimport {pageTree} from \"../page/pages\";\nimport {NavBarTree} from \"../navbar/NavBar\";\n\nexport const Header: FC = () => {\n    return <header>\n        <NavBarTree pages={pageTree}/>\n    </header>;\n};\n","import React, {FC} from \"react\";\nimport {Route} from \"react-router\";\nimport {getPages, PageTree} from \"../page/pages\";\n\nexport const RouteTree: FC<{pages: PageTree}> = ({pages}) => {\n    return <>\n        {[...getPages(pages)].map(({Page, path}) =>\n            <Route key={path} exact path={path} component={Page}/>\n        )}\n    </>;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// data are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst {location} = window;\n\nconst {\n    NODE_ENV: productionMode,\n    PUBLIC_URL: publicUrlString,\n} = process.env;\n\nconst {serviceWorker} = navigator;\n\nconst isLocalHost = (() => {\n    const {hostname} = location;\n    return !!(hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n    );\n})();\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (productionMode === \"production\" && serviceWorker) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(publicUrlString, location.href);\n        if (publicUrl.origin !== location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n        \n        window.addEventListener(\"load\", async () => {\n            const swUrl = `${publicUrlString}/service-worker.js`;\n            \n            if (isLocalHost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                await checkValidServiceWorker(swUrl, config);\n                \n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                await serviceWorker.ready;\n                console.log(\"This web app is being served cache-first by a service worker. \" +\n                    \"To learn more, visit https://bit.ly/CRA-PWA\");\n            } else {\n                // Is not localhost. Just register service worker\n                await registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nasync function registerValidSW(swUrl: string, config?: Config) {\n    try {\n        const registration = await serviceWorker.register(swUrl);\n        registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            if (installingWorker === null) {\n                return;\n            }\n            installingWorker.onstatechange = () => {\n                if (installingWorker.state === \"installed\") {\n                    if (serviceWorker.controller) {\n                        // At this point, the updated precached content has been fetched,\n                        // but the previous service worker will still serve the older\n                        // content until all client tabs are closed.\n                        console.log(\n                            \"New content is available and will be used when all tabs for this page are closed. \" +\n                            \"See https://bit.ly/CRA-PWA.\");\n                        \n                        // Execute callback\n                        if (config && config.onUpdate) {\n                            config.onUpdate(registration);\n                        }\n                    } else {\n                        // At this point, everything has been precached.\n                        // It's the perfect time to display a\n                        // \"Content is cached for offline use.\" message.\n                        console.log(\"Content is cached for offline use.\");\n                        \n                        // Execute callback\n                        if (config && config.onSuccess) {\n                            config.onSuccess(registration);\n                        }\n                    }\n                }\n            };\n        };\n    } catch (e) {\n        console.error(\"Error during service worker registration:\", e);\n    }\n}\n\nexport async function unRegister() {\n    if (serviceWorker) {\n        const registration = await serviceWorker.ready;\n        await registration.unregister();\n    }\n}\n\nasync function checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    try {\n        const response = await fetch(swUrl);\n        const contentType = response.headers.get(\"content-type\");\n        if (response.status === 404 ||\n            (contentType !== null && !contentType.includes(\"javascript\"))) {\n            // No service worker found. Probably a different app. Reload the page.\n            await unRegister();\n            location.reload();\n        } else {\n            // Service worker found. Proceed as normal.\n            await registerValidSW(swUrl, config);\n        }\n    } catch {\n        console.log(\"No internet connection found. App is running in offline mode.\");\n        return;\n    }\n}\n","import {polyfill} from \"./ts/main/polyfill/polyfills\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport {App} from \"./ts/main/app/App\";\nimport * as serviceWorker from \"./ts/util/serviceWorker\";\n\npolyfill();\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unRegister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n(async () => {\n    await serviceWorker.unRegister();\n})();\n","import React, {FC} from \"react\";\nimport \"../../../css/App.css\";\nimport {HashRouter} from \"react-router-dom\";\nimport logo from \"../../../media/logo.svg\";\nimport {pageTree} from \"../page/pages\";\nimport {Footer} from \"./Footer\";\nimport {Header} from \"./Header\";\nimport {NavBarTree2} from \"../navbar/NavBar\";\nimport {RouteTree} from \"./Routes\";\nimport {Title} from \"./Title\";\n\nexport const OldApp: FC = () => {\n    return <div>\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <p>\n                    Edit <code>src/App.tsx</code> and save to reload.\n                </p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Learn React\n                </a>\n            </header>\n        </div>\n    </div>;\n};\n\nexport const App: FC = () => {\n    return <Title>\n        <HashRouter>\n            <Header/>\n            <RouteTree pages={pageTree}/>\n            <Footer/>\n        </HashRouter>\n    </Title>;\n    // return <NavBarTree2/>;\n};\n","module.exports = __webpack_public_path__ + \"static/media/Bacillus subtilis.67160e1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/N Queens Animation.f968b40c.gif\";","module.exports = __webpack_public_path__ + \"static/media/N Queens Solved.17e9dd48.png\";","module.exports = __webpack_public_path__ + \"static/media/Senior Portrait.a57dc17d.jpg\";"],"sourceRoot":""}